#include <bits/stdc++.h>
using namespace std;

// Efficient O(n)
bool pairsum(int arr[], int n, int k)
{
    int low = 0;
    int high = n - 1;
    for (int i = 0; i < n; i++)
    {
        if (arr[low] + arr[high] == k)
        {
            cout << "The elements are " << arr[low] << " and " << arr[high] << endl;
            return true;
            break;
        }
        else if (arr[low] + arr[high] < k)
        {
            low++;
        }
        else if (arr[low] + arr[high] > k)
        {
            high--;
        }
    }
    return false;
}

// Brute force O(n^2)
bool pairsum(int arr[], int n, int k)
{
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = i + 1; j < n; j++)
        {
            if (arr[i] + arr[j] == k)
            {
                cout<<"The elements are "<<arr[i]<<" and "<<arr[j]<<endl;
                return true;
            }
        }
    }
    return false;
}

int main()
{
    int n;
    cout << "Enter the size of array:" << endl;
    cin >> n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    int k;
    cout << "Enter the sum to be found:" << endl;
    cin >> k;
    if (pairsum(arr, n, k) == true)
        cout << "True" << endl;
    else
        cout << "False" << endl;
}
